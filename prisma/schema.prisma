// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 테이블 구조가 변경되었을 때, db push 실행 시, 기존에 있던 데이터가 날아갈 수 있는데, 이에대한 백업 대책을 마련해둬야한다. (우선순위 : 기능구현 이후 순위)

model Icons {
  IconId              Int             @id       @default(autoincrement())   @map("IconId")
  IconURL             String          @map("IconURL")
}

model Vehicles {
  VehicleId           Int             @id         @default(autoincrement())    @map("VehicleId")
  confirm             Int             @default(0)                            @map("confirm")       // *(0 : 미승인, 미확인, 1: 승인, 확인, 2: 수정필요, 보류,  **추가적인 상태값이 필요할 경우, 오름차순 수열로 정리**)
  VehicleNumber       String             @map("VehicleNumber")
  
  CreatedAt           DateTime        @default(now())                          @map("CreatedAt")

  Comment           Comments[]    
  SecondaryComment  SecondaryComments[]
  VehicleImage      VehicleImages[]
}

model Comments {
  CmtId             Int       @id   @default(autoincrement()) @map("CmtId")
  VehicleId         Int       @map("VehicleId")
  UserId            Int       @map("UserId")
  
  comment           String    @map("comment")

  CreatedAt         DateTime  @default(now()) @map("CreatedAt")
  UpdatedAt         DateTime  @updatedAt  @map("UpdatedAt")

  Vehicle           Vehicles   @relation(fields: [VehicleId], references: [VehicleId], onDelete: Cascade)
  SecondaryComment  SecondaryComments[]
}

model SecondaryComments {
  SndCmtId          Int         @id     @default(autoincrement())     @map("SndCmtId")
  VehicleId         Int         @map("VehicleId")
  CmtId             Int         @map("CmtId")
  
  SecondaryComment  String      @map("SecondaryComment")

  CreatedAt         DateTime    @default(now()) @map("CreatedAt")
  UpdatedAt         DateTime    @updatedAt  @map("UpdatedAt")

  Vehicle           Vehicles    @relation(fields: [VehicleId], references: [VehicleId], onDelete: Cascade)
  Comment           Comments    @relation(fields: [CmtId], references: [CmtId], onDelete: Cascade)
}

model VehicleImages {
  ImgId             Int            @id                      @default(autoincrement())              @map("ImgId")
  VehicleId         Int            @map("VehicleId")
  ImgURL            String         @map("ImgURL")
  VehicleNumber     String         @map("VehicleNumber")

  CreatedAt         DateTime       @default(now())   @map("CreatedAt")

  Vehicle Vehicles  @relation(fields: [VehicleId], references: [VehicleId], onDelete: Cascade)
}